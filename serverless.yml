org: giovannibranco
app: serverless-app-alura
service: deploy
frameworkVersion: "3"

params:
  default:
    dbName: "mydbmongocluster"
  dev:
    connectionString: mongodb+srv://giovannipbranco1:XYfxcLqkcuTwcazm@mydbmongocluster.1egtqg0.mongodb.net/
    salt: ufhakljiodfiawjklcansuidjçasklfbuikasjnfasbid
    jwtSecret: nçoijmiduisahdnoçakljwldoacmifmawvniv
  prod:
    connectionString: mongodb+srv://giovannipbranco1:XYfxcLqkcuTwcazm@mydbmongocluster.1egtqg0.mongodb.net?retryWrites=true&w=majority&ssl=true.
    salt: ufhakljiodfiawjklcansuidjçasklfbuikasjnfasbid
    jwtSecret: nçoijmiduisahdnoçakljwldoacmifmawvniv

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    MONGODB_CONNECTION_STRING: ${param:connectionString}
    MONGODB_DB_NAME: ${param:dbName}
    SALT: ${param:salt}
    JWT_SECRET: ${param:jwtSecret}

functions:
  sendResponse:
    handler: api/index.sendResponse
    events:
      - httpApi:
          path: /api/results
          method: post
  login:
    handler: api/index.login
    events:
      - httpApi:
          path: /api/login
          method: post
  getResult:
    handler: api/index.getResult
    events:
      - httpApi:
          path: /api/results/{id}
          method: get

plugins:
  - serverless-offline
